#!/usr/bin/env python
"""
Executable for scheduling a single field.
"""
import ephem
import logging

from obztak import get_survey
from obztak.scheduler import Scheduler
from obztak.factory import scheduler_factory
from obztak.utils.date import datestring

def main():
    parser = Scheduler.parser()
    parser.add_argument('--hex',required=True,type=int,
                        help='field hex id')
    parser.add_argument('--tiling',required=True,type=int,
                        help='field tiling id')
    parser.add_argument('--band',choices=['u','g','r','i','z','Y'],default=None,
                        help='exposure band')
    args = parser.parse_args()

    logging.info("Scheduling field for survey: '%s'"%get_survey())
    date = ephem.Date(args.utc_start) if args.utc_start else ephem.now()
    datestr = datestring(date,0)

    logging.info("Start Time (UTC): %s"%(datestr))

    #scheduler = Scheduler(args.fields,None,None)
    scheduler = scheduler_factory(target_fields=args.fields)
    field = scheduler.schedule_field(args.hex,args.tiling,band=args.band,date=date,plot=args.plot)

    outfile = args.outfile
    if not outfile:
        if args.band is None:
            outfile = '%(HEX)d-%(TILING)02d_'%field[0]
        else:
            outfile = '%s_'%field['ID'][0]
        outfile += '%4d%02d%02d_%02d:%02d:%02d.json'%date.tuple()

    logging.info("Writing %s..."%(outfile))
    field.write(outfile)

if __name__ == "__main__":
    main()
