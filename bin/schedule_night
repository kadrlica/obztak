#!/usr/bin/env python
"""
Executable for scheduling a night.
"""
import os
import ephem
import logging

from obztak import get_survey
from obztak.scheduler import Scheduler
from obztak.factory import scheduler_factory
from obztak.utils.date import nite2utc, utc2nite, datestring

def main():
    parser = Scheduler.parser()
    parser.add_argument('-n','--nite',type=int,
                        help='The *local* nite to schedule')
    parser.remove_argument('--utc-end')
    args = parser.parse_args()

    logging.info("Scheduling for survey: '%s'"%get_survey())

    if args.utc_start and args.nite:
        msg = "Can't specify '--utc-start' and '--nite'"
        raise Exception(msg)

    if args.utc_start:
        date = ephem.Date(args.utc_start)
        start = date
    elif args.nite:
        date = nite2utc(str(args.nite))
        start = None
    else:
        date = ephem.now()
        start = None

    nitestr = utc2nite(date)
    datestr = datestring(date,0)

    logging.info("Scheduling nite: %s"%(nitestr))
    logging.info("Start Time (UTC): %s"%(datestr))

    scheduler = scheduler_factory(target_fields=args.fields,
                                  windows=args.windows,
                                  completed_fields=args.complete)
    chunks = scheduler.schedule_nite(date,start=start,chunk=args.chunk,
                                     plot=args.plot,mode=args.mode)



    if not args.outfile:
        outdir  = nitestr
        outfile = os.path.join(outdir,nitestr+'.json')
    else:
        outdir  = os.path.dirname(args.outfile)
        outfile = args.outfile

    if not os.path.exists(outdir): os.makedirs(outdir)
    base,ext = os.path.splitext(outfile)
    for i,chunk in enumerate(chunks):
        if len(chunks) > 1:
            timestamp = True
            if timestamp and not args.outfile:
                # For files with timestamp label
                datestr = chunk['DATE'][0].astype(str)
                dirname = os.path.dirname(base)
                basename = datestr.split(' ')[0].replace('/','')
                base = os.path.join(dirname,basename)
                idx = '_'+datestr.split(' ')[1][:8]
            else:
                # For files with chunk label
                idx = '_%02d'%(i+1)
            outfile = base+idx+ext

        chunk.write(outfile)
        if args.write_protect:
            os.chmod(outfile,0o444)

if __name__ == "__main__":
    main()
