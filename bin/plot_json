#!/usr/bin/env python
"""
Plot json files.
"""
import argparse
import os
import numpy as np
import matplotlib
import pylab as plt

from obztak import get_survey
from obztak.field import FieldArray
from obztak.utils.ortho import plotFields, movieFields
from obztak.utils.parser import Parser
from obztak.factory import field_factory

MOVIES = ['.gif']

if __name__ == "__main__":
    parser = Parser(description=__doc__)
    parser.add_argument('infiles',nargs='+',
                        help='Input files')
    parser.add_argument('-i',dest='inspect',action='store_true',
                        help='interactive plot window')
    parser.add_argument('-k','--chunk',action='store_true',
                        help='plot chunks of exposures file-by-file.')
    parser.add_argument('-a','--all',action='store_true',
                        help='plot all exposures at once.')
    parser.add_argument('--airmass',default=None,type=float,
                        help='Airmass to plot.')
    parser.add_argument('-c','--complete',const=None,nargs='?',action='append',
                        help="fields that have been completed.")
    parser.add_argument('-o','--outfile',
                        help='output file to save')
    args = parser.parse_args()

    # Set the backend for output (doesn't really work here...)
    #if args.outfile is not None: matplotlib.use('Agg')
    survey = get_survey()

    ext = os.path.splitext(args.outfile)[-1] if args.outfile else None

    idx = []
    fields = field_factory(survey) 
    for filename in args.infiles:
        fields = fields + field_factory(survey).read(filename)
        if args.chunk: idx.append(len(fields)-1)

    if np.any(fields['RA']) < 0:
        raise ValueError("Negative RA not allowed by SISPI.")

    completed_fields = field_factory(survey)
    if args.complete is not None:
        for f in args.complete:
            if f is None:
                completed_fields=completed_fields+completed_fields.load_database()
            else:
                completed_fields=completed_fields+completed_fields.read(f)

    movie = True if ext in MOVIES else False
        
    options = dict(airmass=args.airmass,smash=False)

    if args.airmass is not None:
        options['airmass'] = args.airmass
    elif survey in ['maglites','pals']:
        options['airmass'] = 2.0
    else:
        options['airmass'] = 1.4

    if args.all:
        plotFields(fields[-1],target_fields=fields,completed_fields=completed_fields+fields,options_basemap=options)
    elif args.chunk:
        for i in idx:
            plotFields(fields[i],target_fields=fields,completed_fields=completed_fields+fields[:i],options_basemap=options)
    else:
        if movie:
            movieFields(args.outfile,fields,target_fields=fields,completed_fields=completed_fields,options_basemap=options)
        else:
            plotFields(fields,target_fields=fields,completed_fields=completed_fields,options_basemap=options)

    if args.outfile and ext not in ['.gif']:
        plt.savefig(args.outfile,bbox_inches='tight')    

    if args.inspect:
        raw_input(' ...finish...')
